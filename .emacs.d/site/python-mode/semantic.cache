;; Object python-mode/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "python-mode/"
  :tables (list 
   (semanticdb-table "python-mode.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("comint" include nil nil [1101 1118]) ("custom" include nil nil [1119 1136]) ("cl" include nil nil [1156 1169]) ("compile" include nil nil [1171 1189]) ("ansi-color" include nil nil [1190 1211]) ("cc-cmds" include nil nil [1212 1230]) ("shell" include nil nil [1231 1247]) ("unless" code nil nil [1248 1310]) ("defgroup" code nil nil [1312 1448]) ("py-version" variable (:constant-flag t :default-value "6.0.5") nil [1450 1479]) ("py-indent-offset" variable (:user-visible-flag t :default-value 4) nil [1512 1737]) ("make-variable-buffer-local" code nil nil [1738 1784]) ("pdb-path" variable (:default-value (quote /usr/lib/python2\.7/pdb\.py)) nil [1786 2006]) ("py-guess-pdb-path" function nil nil [2008 2611]) ("py-install-directory" variable nil nil [2613 2824]) ("py-guess-py-install-directory-p" variable (:default-value t) nil [2826 3023]) ("py-load-pymacs-p" variable nil nil [3025 3292]) ("py-verbose-p" variable nil nil [3294 3443]) ("py-report-position-p" variable nil nil [3445 3637]) ("py-extensions" variable (:default-value "py-extensions.el") nil [3639 3816]) ("py-hide-show-minor-mode-p" variable nil nil [3818 3958]) ("py-outline-minor-mode-p" variable (:default-value t) nil [3960 4094]) ("py-start-run-py-shell" variable (:default-value t) nil [4096 4317]) ("py-use-number-face-p" variable nil nil [4319 4668]) ("py-close-provides-newline" variable (:default-value t) nil [4734 4898]) ("make-variable-buffer-local" code nil nil [4899 4954]) ("py-dedent-keep-relative-column" variable (:default-value t) nil [4956 5154]) ("py-indent-honors-multiline-listing" variable nil nil [5156 5382]) ("py-indent-honors-inline-comment" variable nil nil [5384 5547]) ("py-closing-list-dedents-bos" variable nil nil [5549 5763]) ("py-electric-colon-active-p" variable nil nil [5765 5930]) ("py-electric-comment-p" variable (:default-value t) nil [5932 6071]) ("py-electric-comment-add-space-p" variable nil nil [6073 6226]) ("py-mark-decorators" variable nil nil [6228 6386]) ("py-tab-indent" variable (:user-visible-flag t :default-value t) nil [6388 6516]) ("py-complete-function" variable (:default-value (quote py-shell-complete)) nil [6518 6915]) ("py-shell-complete-function" variable (:default-value (quote py-completion-at-point)) nil [6917 7257]) ("ipython-complete-function" variable (:default-value (quote ipython-complete)) nil [7259 9034]) ("py-encoding-string" variable (:default-value " # -*- coding: utf-8 -*-") nil [9036 9189]) ("py-encoding-string-re" variable (:default-value "^[ 	]*#[ 	]*-\\*-[ 	]*coding:.+-\\*-") nil [9191 9310]) ("symbol-definition-start-re" variable nil nil [9312 9347]) ("setq" code nil nil [9348 9424]) ("py-shebang-startstring" variable (:default-value "#! /bin/env") nil [9425 9553]) ("py-shebang-regexp" variable (:default-value "#![ 	]?\\([^ 	
]+\\)[ 	]?\\([iptj]+ython[^ 	
]*\\)") nil [9555 9682]) ("py-python-command-args" variable (:user-visible-flag t :default-value (quote ("-i"))) nil [9684 9844]) ("make-variable-buffer-local" code nil nil [9845 9897]) ("set-default" code nil nil [9899 9945]) ("make-obsolete-variable" code nil nil [9947 10024]) ("py-jython-command-args" variable (:user-visible-flag t :default-value (quote ("-i"))) nil [10025 10209]) ("py-cleanup-temporary" variable (:default-value t) nil [10211 10386]) ("py-lhs-inbound-indent" variable (:default-value 1) nil [10388 10590]) ("make-variable-buffer-local" code nil nil [10591 10642]) ("py-rhs-inbound-indent" variable (:default-value 1) nil [10644 10841]) ("make-variable-buffer-local" code nil nil [10842 10893]) ("py-continuation-offset" variable (:user-visible-flag t :default-value 2) nil [10895 11123]) ("py-smart-indentation" variable (:user-visible-flag t :default-value t) nil [11125 12159]) ("make-variable-buffer-local" code nil nil [12160 12210]) ("py-align-multiline-strings-p" variable (:user-visible-flag t :default-value t) nil [12212 12636]) ("py-block-comment-prefix" variable (:user-visible-flag t :default-value "##") nil [12638 13065]) ("py-indent-comments" variable (:default-value t) nil [13067 13179]) ("py-temp-directory" variable (:user-visible-flag t :default-value (let ((ok (quote (lambda (x) (and x (setq x (expand-file-name x)) (file-directory-p x) (file-writable-p x) x))))) (or (funcall ok (getenv "TMPDIR")) (funcall ok "/usr/tmp") (funcall ok "/tmp") (funcall ok "/var/tmp") (funcall ok ".") (error "Couldn't find a usable temp directory -- set `py-temp-directory'")))) nil [13181 13982]) ("py-beep-if-tab-change" variable (:user-visible-flag t :default-value t) nil [13984 14482]) ("py-jump-on-exception" variable (:user-visible-flag t :default-value t) nil [14484 14803]) ("py-ask-about-save" variable (:default-value t) nil [14805 15009]) ("py-backspace-function" variable (:user-visible-flag t :default-value (quote backward-delete-char-untabify)) nil [15011 15188]) ("py-delete-function" variable (:user-visible-flag t :default-value (quote delete-char)) nil [15190 15342]) ("py-pdbtrack-do-tracking-p" variable (:user-visible-flag t :default-value t) nil [15344 15806]) ("make-variable-buffer-local" code nil nil [15807 15862]) ("py-pdbtrack-minor-mode-string" variable (:user-visible-flag t :default-value " PDB") nil [15864 16018]) ("py-import-check-point-max" variable (:default-value 20000) nil [16020 16431]) ("py-jython-packages" variable (:default-value (quote ("java" "javax"))) nil [16433 16578]) ("make-obsolete-variable" code nil nil [16579 16648]) ("py-current-defun-show" variable (:default-value t) nil [16650 16895]) ("py-current-defun-delay" variable (:default-value 2) nil [16897 17133]) ("py-send-receive-delay" variable (:default-value 5) nil [17135 17274]) ("py-exec-command" variable nil nil [17276 17338]) ("make-variable-buffer-local" code nil nil [17339 17384]) ("py-exec-string-command" variable nil nil [17386 17455]) ("make-variable-buffer-local" code nil nil [17456 17508]) ("py-which-bufname" variable (:default-value "Python") nil [17510 17544]) ("make-variable-buffer-local" code nil nil [17545 17591]) ("py-master-file" variable nil nil [17593 18049]) ("make-variable-buffer-local" code nil nil [18050 18094]) ("py-pychecker-history" variable nil nil [18096 18129]) ("py-pychecker-command" variable (:user-visible-flag t :default-value "pychecker") nil [18131 18277]) ("py-pychecker-command-args" variable (:user-visible-flag t :default-value (quote ("--stdlib"))) nil [18279 18461]) ("py-shell-alist" variable (:user-visible-flag t :default-value (quote (("jython" quote jython) ("python" quote cpython)))) nil [18463 18672]) ("py-shell-input-prompt-1-regexp" variable (:user-visible-flag t :default-value "^>>> ") nil [18674 18828]) ("py-shell-input-prompt-2-regexp" variable (:user-visible-flag t :default-value "^[.][.][.] ") nil [18830 19022]) ("py-shell-switch-buffers-on-execute" variable (:default-value t) nil [19024 19165]) ("py-split-windows-on-execute" variable (:default-value t) nil [19167 19313]) ("py-hide-show-keywords" variable (:default-value (quote ("class" "def" "elif" "else" "except" "for" "if" "while" "finally" "try" "with"))) nil [19315 19593]) ("py-hide-show-hide-docstrings" variable (:user-visible-flag t :default-value t) nil [19595 19732]) ("python-mode-hook" variable nil nil [19734 19837]) ("imenu-create-index-p" variable (:default-value t) nil [19839 20013]) ("py-shell-name" variable (:default-value "python") nil [20015 20192]) ("make-variable-buffer-local" code nil nil [20193 20236]) ("py-shell-toggle-1" variable (:default-value py-shell-name) nil [20238 20390]) ("make-variable-buffer-local" code nil nil [20391 20438]) ("py-shell-toggle-2" variable (:default-value "python3") nil [20440 20588]) ("make-variable-buffer-local" code nil nil [20589 20636]) ("py-source-modes" variable (:default-value (quote (python-mode jython-mode))) nil [20638 20970]) ("py-shell-prompt-alist" variable (:default-value (quote (("ipython" . "^In \\[[0-9]+\\]: *") (t . "^>>> ")))) nil [20972 21413]) ("py-shell-continuation-prompt-alist" variable (:default-value (quote (("ipython" . "^   [.][.][.]+: *") (t . "^[.][.][.] ")))) nil [21415 21902]) ("ipython-de-input-prompt-regexp" variable (:default-value "\\(?:
In \\[[0-9]+\\]: *.*
----+> \\(.*
\\)[
]?\\)\\|\\(?:
In \\[[0-9]+\\]: *\\(.*
\\)\\)\\|^[ ]\\{3\\}[.]\\{3,\\}: *\\(.*
\\)") nil [21918 22311]) ("ipython-de-output-prompt-regexp" variable (:default-value "^Out\\[[0-9]+\\]: ") nil [22313 22438]) ("py-cleanup-temporary" variable (:default-value t) nil [22440 22615]) ("py-match-paren-mode" variable (:user-visible-flag t) nil [22617 22893]) ("py-match-paren-key" variable (:user-visible-flag t :default-value "%") nil [22895 23316]) ("py-kill-empty-line" variable (:user-visible-flag t :default-value t) nil [23318 23443]) ("py-remove-cwd-from-path" variable (:default-value t) nil [23445 23845]) ("py-imenu-show-method-args-p" variable (:user-visible-flag t) nil [23847 24045]) ("python-default-interpreter" variable (:user-visible-flag t :default-value (quote cpython)) nil [24047 24856]) ("python-python-command-args" variable (:user-visible-flag t :default-value (quote ("-i"))) nil [24858 25022]) ("python-jython-command-args" variable (:user-visible-flag t :default-value (quote ("-i"))) nil [25024 25213]) ("python-pdbtrack-do-tracking-p" variable (:user-visible-flag t :default-value t) nil [25215 25758]) ("make-variable-buffer-local" code nil nil [25759 25818]) ("python-pdbtrack-minor-mode-string" variable (:user-visible-flag t :default-value " PDB") nil [25820 25972]) ("python-shell-prompt-alist" variable (:default-value (quote (("ipython" . "^In \\[[0-9]+\\]: *") (t . "^>>> ")))) nil [25974 26435]) ("python-shell-continuation-prompt-alist" variable (:default-value (quote (("ipython" . "^   [.][.][.]+: *") (t . "^[.][.][.] ")))) nil [26437 26944]) ("python-python-command" variable (:default-value "python") nil [26946 27106]) ("python-jython-command" variable (:default-value "jython") nil [27108 27268]) ("inferior-python-filter-regexp" variable (:default-value "\\`\\s-*\\S-?\\S-?\\s-*\\'") nil [27270 27506]) ("python-remove-cwd-from-path" variable (:default-value t) nil [27508 27925]) ("python-source-modes" variable (:default-value (quote (python-mode jython-mode))) nil [27927 28263]) ("python-jython-packages" variable (:default-value (quote ("java" "javax" "org" "com"))) nil [28265 28516]) ("py-number-face" variable (:default-value (quote ((t (:inherit default))))) nil [28518 28669]) ("py-number-face" variable (:default-value (quote py-number-face)) nil [28670 28709]) ("py-XXX-tag-face" variable (:default-value (quote ((t (:inherit font-lock-string-face))))) nil [28711 28824]) ("py-XXX-tag-face" variable (:default-value (quote py-XXX-tag-face)) nil [28825 28866]) ("py-pseudo-keyword-face" variable (:default-value (quote ((t (:inherit font-lock-keyword-face))))) nil [28921 29097]) ("py-pseudo-keyword-face" variable (:default-value (quote py-pseudo-keyword-face)) nil [29098 29153]) ("py-variable-name-face" variable (:default-value (quote ((t (:inherit default))))) nil [29155 29317]) ("py-variable-name-face" variable (:default-value (quote py-variable-name-face)) nil [29318 29371]) ("py-decorators-face" variable (:default-value (quote ((t (:inherit font-lock-keyword-face))))) nil [29395 29516]) ("py-decorators-face" variable (:default-value (quote py-decorators-face)) nil [29517 29564]) ("py-builtins-face" variable (:default-value (quote ((t (:inherit font-lock-builtin-face))))) nil [29587 29740]) ("py-builtins-face" variable (:default-value (quote py-builtins-face)) nil [29741 29784]) ("py-class-name-face" variable (:default-value (quote ((t (:inherit font-lock-type-face))))) nil [29786 29898]) ("py-class-name-face" variable (:default-value (quote py-class-name-face)) nil [29899 29946]) ("py-exception-name-face" variable (:default-value (quote ((t (:inherit font-lock-builtin-face))))) nil [29990 30093]) ("py-exception-name-face" variable (:default-value (quote py-exception-name-face)) nil [30094 30149]) ("py-use-local-default" variable nil nil [30151 30462]) ("py-shell-local-path" variable nil nil [30464 30638]) ("py-execute-directory" variable nil nil [30691 30797]) ("py-prev-dir/file" variable nil nil [30799 30954]) ("py-exception-buffer" variable nil nil [30956 30988]) ("py-output-buffer" variable (:default-value "*Python Output*") nil [30990 31033]) ("make-variable-buffer-local" code nil nil [31034 31080]) ("py-execute-keep-temporary-file-p" variable nil nil [31082 31197]) ("py-expression-skip-regexp" variable (:default-value "^ =:#	
") nil [31199 31337]) ("py-expression-looking-regexp" variable (:default-value "[^ =:#	
)]") nil [31391 31552]) ("py-not-expression-regexp" variable (:default-value "[ .=:#	
)]") nil [31612 31750]) ("py-minor-expression-skip-regexp" variable (:default-value "^ .()[]{}=:#	
") nil [31806 31969]) ("py-minor-expression-forward-regexp" variable (:default-value "^ .)}=:#	
") nil [32034 32196]) ("py-minor-expression-backward-regexp" variable (:default-value "^ .({=:#	
") nil [32198 32361]) ("py-not-minor-expression-skip-regexp" variable (:default-value " \\.=:#	
") nil [32363 32522]) ("py-minor-expression-looking-regexp" variable (:default-value "[^ .=:#	
)]") nil [32524 32704]) ("py-not-minor-expression-regexp" variable (:default-value "[ .=:#	
)]") nil [32771 32927]) ("py-line-number-offset" variable nil nil [32989 33281]) ("match-paren-no-use-syntax-pps" variable nil nil [33283 33325]) ("py-keep-region-active" function nil nil [33327 33636]) ("py-blank-or-comment-re" variable (:constant-flag t :default-value "[ 	]*\\($\\|#\\)") nil [33651 33761]) ("py-block-closing-keywords-re" variable (:constant-flag t :default-value "[ 	]*\\<\\(return\\|raise\\|break\\|continue\\|pass\\)\\_>[ 
	]") nil [33763 33942]) ("py-finally-re" variable (:constant-flag t :default-value "[ 	]*\\_<finally\\_>[: 
	]") nil [33944 34069]) ("py-except-re" variable (:constant-flag t :default-value "[ 	]*\\_<except\\_>[: 
	]") nil [34071 34196]) ("py-else-re" variable (:constant-flag t :default-value "[ 	]*\\_<else\\_>[: 
	]") nil [34198 34329]) ("py-return-re" variable (:constant-flag t :default-value ".*:?[ 	]*\\_<\\(return\\)\\_>[ 
	]") nil [34331 34472]) ("py-no-outdent-re" variable (:constant-flag t :default-value "\\(try:\\|except\\(\\s +.*\\)?:\\|while\\s +.*:\\|for\\s +.*:\\|if\\s +.*:\\|elif\\s +.*:\\)\\([ 	]*\\_<\\(return\\|raise\\|break\\|continue\\|pass\\)\\_>[ 	
]\\)") nil [34474 34667]) ("py-traceback-line-re" variable (:default-value "^IPython\\|^In \\[[0-9]+\\]: *\\|^>>>\\|^[^ 	>]+>[^0-9]+\\([0-9]+\\)\\|^[ 	]+File \"\\([^\"]+\\)\", line \\([0-9]+\\)") nil [35151 35418]) ("py-assignment-re" variable (:constant-flag t :default-value "\\<\\w+\\>[ 	]*\\(=\\|+=\\|*=\\|%=\\|&=\\|^=\\|<<=\\|-=\\|/=\\|**=\\||=\\|>>=\\|//=\\)") nil [35420 35588]) ("py-block-re" variable (:constant-flag t :default-value "[ 	]*\\_<\\(class\\|def\\|for\\|if\\|try\\|while\\|with\\)\\_>[: 
	]") nil [35590 35738]) ("py-minor-block-re" variable (:constant-flag t :default-value "[ 	]*\\_<\\(for\\|if\\|try\\)\\_>[: 
	]") nil [35740 35867]) ("py-try-block-re" variable (:constant-flag t :default-value "[ 	]*\\_<try\\_>[: 
	]") nil [35869 35977]) ("py-class-re" variable (:constant-flag t :default-value "[ 	]*\\_<\\(class\\)\\_>[ 
	]") nil [35979 36086]) ("py-def-or-class-re" variable (:constant-flag t :default-value "[ 	]*\\_<\\(def\\|class\\)\\_>[ 
	]") nil [36088 36222]) ("py-def-re" variable (:constant-flag t :default-value "[ 	]*\\_<\\(def\\)\\_>[ 
	]") nil [36224 36331]) ("py-block-or-clause-re" variable (:constant-flag t :default-value "[ 	]*\\_<\\(if\\|else\\|elif\\|while\\|for\\|def\\|class\\|try\\|except\\|finally\\|with\\)\\_>[: 
	]") nil [36333 36539]) ("py-clause-re" variable (:constant-flag t :default-value "[ 	]*\\_<\\(else\\|elif\\|except\\|finally\\)\\_>[: 
	]") nil [36541 36686]) ("py-elif-re" variable (:constant-flag t :default-value "[ 	]*\\_<\\elif\\_>[: 
	]") nil [36688 36816]) ("py-try-clause-re" variable (:constant-flag t :default-value "[ 	]*\\_<\\(except\\|else\\|finally\\)\\_>[: 
	]") nil [36818 36964]) ("py-if-re" variable (:constant-flag t :default-value "[ 	]*\\_<if\\_>[ 
	]") nil [36966 37075]) ("py-try-re" variable (:constant-flag t :default-value "[ 	]*\\_<try\\_>[: 
	]") nil [37077 37191]) ("unless" code nil nil [37222 37384]) ("unless" code nil nil [37410 37583]) ("py-mode-syntax-table" variable nil nil [37585 37618]) ("setq" code nil nil [37619 38690]) ("py-help-mode-syntax-table" variable (:default-value (let ((st (make-syntax-table py-mode-syntax-table))) (modify-syntax-entry 39 "." st) (modify-syntax-entry 34 "." st) st)) nil [38692 39023]) ("py-space-backslash-table" variable (:constant-flag t :default-value (let ((table (copy-syntax-table py-mode-syntax-table))) (modify-syntax-entry 92 " " table) table)) nil [39025 39236]) ("py-file-queue" variable nil nil [39306 39433]) ("python-mode-abbrev-table" variable nil nil [39435 39472]) ("define-abbrev-table" code nil nil [39473 39523]) ("inferior-python-mode-abbrev-table" variable nil nil [39525 39587]) ("define-abbrev-table" code nil nil [39588 39647]) ("py-pdbtrack-stack-entry-regexp" variable (:constant-flag t :default-value (concat ".*\\(" py-shell-input-prompt-1-regexp ">\\|>\\) *\\(.*\\)(\\([0-9]+\\))\\([?a-zA-Z0-9_<>()]+\\)()")) nil [39671 39887]) ("py-pdbtrack-input-prompt" variable nil nil [39991 40024]) ("setq" code nil nil [40025 40084]) ("py-pydbtrack-input-prompt" variable nil nil [40085 40119]) ("setq" code nil nil [40120 40171]) ("py-pdbtrack-marker-regexp-file-group" variable (:constant-flag t :default-value 2) nil [40496 40618]) ("py-pdbtrack-marker-regexp-line-group" variable (:constant-flag t :default-value 3) nil [40620 40744]) ("py-pdbtrack-marker-regexp-funcname-group" variable (:constant-flag t :default-value 4) nil [40746 40876]) ("py-pdbtrack-track-range" variable (:constant-flag t :default-value 10000) nil [40878 40993]) ("py-pdbtrack-is-tracking-p" variable nil nil [40995 41033]) ("add-to-list" code nil nil [41048 41121]) ("add-to-list" code nil nil [41122 41199]) ("add-to-list" code nil nil [41200 41277]) ("add-to-list" code nil nil [41278 41339]) ("python-font-lock-syntactic-keywords" variable (:constant-flag t :default-value (\` (((\, (concat "\\(?:^\\|[^\\]\\(?:\\\\.\\)*\\)" "\\(?:\\('\\)\\('\\)\\('\\)\\|\\(?1:\"\\)\\(?2:\"\\)\\(?3:\"\\)\\)")) (1 (python-quote-syntax 1) nil lax) (2 (python-quote-syntax 2)) (3 (python-quote-syntax 3)))))) nil [41341 41915]) ("python-quote-syntax" function (:arguments ("n")) nil [41917 43650]) ("py-shell-map" variable nil nil [43677 43745]) ("python-shell-map" variable (:default-value (let ((map (copy-keymap comint-mode-map))) (define-key map [tab] (quote tab-to-tab-stop)) (define-key map "-" (quote py-up-exception)) (define-key map "=" (quote py-down-exception)) map)) nil [43747 44009]) ("python-mode-syntax-table" variable nil nil [44011 44083]) ("setq" code nil nil [44085 44872]) ("py-menu" variable nil nil [44874 44890]) ("python-mode-map" variable nil nil [44891 44915]) ("setq" code nil nil [44916 51822]) ("py-point" function (:arguments ("position")) nil [51835 53003]) ("python-font-lock-keywords" variable nil nil [54823 54917]) ("setq" code nil nil [54919 61450]) ("when" code nil nil [61452 61599]) ("py-font-lock-syntactic-keywords" variable (:constant-flag t :default-value (quote (("[^\\]\\\\\\(?:\\\\\\\\\\)*\\(\\s\"\\)\\1\\(\\1\\)" (2 (7))) ("\\([RUBrub]?\\)[Rr]?\\(\\s\"\\)\\2\\(\\2\\)" (1 (py-quote-syntax 1)) (2 (py-quote-syntax 2)) (3 (py-quote-syntax 3)))))) nil [61601 61878]) ("py-quote-syntax" function (:arguments ("n")) nil [61880 64095]) ("python-dotty-syntax-table" variable (:constant-flag t :default-value (let ((table (make-syntax-table))) (set-char-table-parent table py-mode-syntax-table) (modify-syntax-entry 46 "_" table) table)) nil [64097 64366]) ("py-dotted-expression-syntax-table" variable nil nil [64467 64574]) ("when" code nil nil [64575 64843]) ("py-beg-of-defun-function" function nil nil [64869 65000]) ("py-end-of-defun-function" function nil nil [65002 65114]) ("custom-add-option" code nil nil [65180 65244]) ("custom-add-option" code nil nil [65245 65370]) ("custom-add-option" code nil nil [65432 65482]) ("make-obsolete-variable" code nil nil [65539 65604]) ("jython-mode-hook" variable (:user-visible-flag t) nil [65605 65714]) ("py-shell-hook" variable (:user-visible-flag t) nil [65716 65774]) ("and" code nil nil [65909 66014]) ("py-keywords" variable (:default-value "\\_<\\(ArithmeticError\\|AssertionError\\|AttributeError\\|BaseException\\|BufferError\\|BytesWarning\\|DeprecationWarning\\|EOFError\\|Ellipsis\\|EnvironmentError\\|Exception\\|False\\|FloatingPointError\\|FutureWarning\\|GeneratorExit\\|IOError\\|ImportError\\|ImportWarning\\|IndentationError\\|IndexError\\|KeyError\\|KeyboardInterrupt\\|LookupError\\|MemoryError\\|NameError\\|NoneNotImplementedError\\|NotImplemented\\|OSError\\|OverflowError\\|PendingDeprecationWarning\\|ReferenceError\\|RuntimeError\\|RuntimeWarning\\|StandardError\\|StopIteration\\|SyntaxError\\|SyntaxWarning\\|SystemError\\|SystemExit\\|TabError\\|True\\|TypeError\\|UnboundLocalError\\|UnicodeDecodeError\\|UnicodeEncodeError\\|UnicodeError\\|UnicodeTranslateError\\|UnicodeWarning\\|UserWarning\\|ValueError\\|Warning\\|ZeroDivisionError\\|__debug__\\|__import__\\|__name__\\|abs\\|all\\|and\\|any\\|apply\\|as\\|assert\\|basestring\\|bin\\|bool\\|break\\|buffer\\|bytearray\\|callable\\|chr\\|class\\|classmethod\\|cmp\\|coerce\\|compile\\|complex\\|continue\\|copyright\\|credits\\|def\\|del\\|delattr\\|dict\\|dir\\|divmod\\|elif\\|else\\|enumerate\\|eval\\|except\\|exec\\|execfile\\|exit\\|file\\|filter\\|float\\|for\\|format\\|from\\|getattr\\|global\\|globals\\|hasattr\\|hash\\|help\\|hex\\|id\\|if\\|import\\|in\\|input\\|int\\|intern\\|is\\|isinstance\\|issubclass\\|iter\\|lambda\\|len\\|license\\|list\\|locals\\|long\\|map\\|max\\|memoryview\\|min\\|next\\|not\\|object\\|oct\\|open\\|or\\|ord\\|pass\\|pow\\|print\\|property\\|quit\\|raise\\|range\\|raw_input\\|reduce\\|reload\\|repr\\|return\\|round\\|set\\|setattr\\|slice\\|sorted\\|staticmethod\\|str\\|sum\\|super\\|tuple\\|type\\|unichr\\|unicode\\|vars\\|while\\|with\\|xrange\\|yield\\|zip\\|\\)\\_>") nil [66016 67833]) ("py-in-string-or-comment-p" function nil nil [67835 68072]) ("py-insert-default-shebang" function (:user-visible-flag t) nil [68074 68291]) ("py-electric-comment" function (:user-visible-flag t :arguments ("arg")) nil [68293 69495]) ("py-electric-colon" function (:user-visible-flag t :arguments ("arg")) nil [69497 70515]) ("py-top-level-form-p" function nil nil [70517 70829]) ("py-electric-backspace" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [70854 71474]) ("py-electric-delete" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [71476 71995]) ("put" code nil nil [73028 73072]) ("put" code nil nil [73081 73123]) ("put" code nil nil [73137 73194]) ("put" code nil nil [73203 73258]) ("put" code nil nil [73272 73326]) ("put" code nil nil [73335 73387]) ("py-indent-line-outmost" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [73404 74070]) ("py-indent-line" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [74072 76122]) ("py-newline-and-indent" function (:user-visible-flag t) nil [76124 77090]) ("defalias" code nil nil [77092 77153]) ("py-newline-and-dedent" function (:user-visible-flag t) nil [77154 77530]) ("toggle-indent-tabs-mode" function (:user-visible-flag t) nil [77532 77914]) ("indent-tabs-mode" function (:user-visible-flag t :arguments ("arg" "&optional" "iact")) nil [77916 78433]) ("indent-tabs-mode-on" function (:user-visible-flag t :arguments ("arg")) nil [78435 78569]) ("indent-tabs-mode-off" function (:user-visible-flag t :arguments ("arg")) nil [78571 78710]) ("py-guess-indent-offset" function (:user-visible-flag t :arguments ("&optional" "global" "orig")) nil [78712 80018]) ("py-guessed-sanity-check" function (:arguments ("guessed")) nil [80020 80118]) ("py-comment-indent-function" function nil nil [80120 80710]) ("py-narrow-to-defun" function (:user-visible-flag t :arguments ("&optional" "class")) nil [80712 81132]) ("defalias" code nil nil [81186 81243]) ("defalias" code nil nil [81244 81294]) ("defalias" code nil nil [81295 81346]) ("defalias" code nil nil [81347 81386]) ("defalias" code nil nil [81401 81448]) ("py-shift-left" function (:user-visible-flag t :arguments ("&optional" "count" "start" "end")) nil [81449 81792]) ("defalias" code nil nil [81794 81843]) ("py-shift-right" function (:user-visible-flag t :arguments ("&optional" "count" "beg" "end")) nil [81844 82180]) ("py-shift-intern" function (:arguments ("count" "&optional" "start" "end")) nil [82182 83184]) ("py-shift-forms-base" function (:arguments ("form" "arg" "&optional" "beg" "end")) nil [83186 83970]) ("py-shift-paragraph-right" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [83972 84362]) ("py-shift-paragraph-left" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [84364 84757]) ("py-shift-block-right" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [84759 85137]) ("py-shift-block-left" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [85139 85520]) ("py-shift-clause-right" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [85522 85903]) ("py-shift-clause-left" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [85905 86289]) ("py-shift-def-right" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [86291 86663]) ("py-shift-def-left" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [86665 87040]) ("py-shift-class-right" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [87042 87420]) ("py-shift-class-left" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [87422 87803]) ("py-shift-line-right" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [87805 88180]) ("py-shift-line-left" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [88182 88560]) ("py-shift-statement-right" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [88562 88952]) ("py-shift-statement-left" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [88954 89347]) ("py-indent-region" function (:user-visible-flag t :arguments ("start" "end" "&optional" "indent-offset")) nil [89349 92985]) ("py-beginning-of-paragraph-position" function (:user-visible-flag t) nil [93001 93231]) ("py-beginning-of-block-position" function (:user-visible-flag t) nil [93233 93451]) ("py-beginning-of-clause-position" function (:user-visible-flag t) nil [93453 93674]) ("py-beginning-of-def-position" function (:user-visible-flag t) nil [93676 93888]) ("py-beginning-of-class-position" function (:user-visible-flag t) nil [93890 94108]) ("py-beginning-of-line-position" function (:user-visible-flag t) nil [94110 94325]) ("py-beginning-of-statement-position" function (:user-visible-flag t) nil [94327 94557]) ("py-end-of-paragraph-position" function (:user-visible-flag t) nil [94559 94771]) ("py-end-of-block-position" function (:user-visible-flag t) nil [94773 94973]) ("py-end-of-clause-position" function (:user-visible-flag t) nil [94975 95178]) ("py-end-of-def-position" function (:user-visible-flag t) nil [95180 95374]) ("py-end-of-class-position" function (:user-visible-flag t) nil [95376 95576]) ("py-end-of-def-or-class-position" function (:user-visible-flag t) nil [95578 95814]) ("py-end-of-line-position" function (:user-visible-flag t) nil [95816 96013]) ("py-end-of-statement-position" function (:user-visible-flag t) nil [96015 96227]) ("py-bounds-of-declarations" function (:user-visible-flag t) nil [96246 97849]) ("defalias" code nil nil [97851 97917]) ("py-beginning-of-declarations" function (:user-visible-flag t) nil [97918 98233]) ("defalias" code nil nil [98235 98297]) ("py-end-of-declarations" function (:user-visible-flag t) nil [98298 98601]) ("defalias" code nil nil [98603 98652]) ("py-declarations" function (:user-visible-flag t) nil [98653 99194]) ("py-kill-declarations" function (:user-visible-flag t) nil [99196 99613]) ("py-bounds-of-statements" function (:user-visible-flag t) nil [99630 101190]) ("defalias" code nil nil [101192 101254]) ("py-beginning-of-statements" function (:user-visible-flag t) nil [101255 101549]) ("defalias" code nil nil [101551 101609]) ("py-end-of-statements" function (:user-visible-flag t) nil [101610 101892]) ("defalias" code nil nil [101894 101939]) ("py-statements" function (:user-visible-flag t) nil [101940 102427]) ("py-kill-statements" function (:user-visible-flag t) nil [102429 102844]) ("py-comment-region" function (:user-visible-flag t :arguments ("beg" "end" "&optional" "arg")) nil [102868 103093]) ("py-join-words-wrapping" function (:arguments ("words" "separator" "line-prefix" "line-length")) nil [103095 103766]) ("py-fill-comment" function (:arguments ("&optional" "justify")) nil [103768 106226]) ("py-fix-this-indent" function (:arguments ("indent")) nil [106228 106503]) ("py-fill-string" function (:arguments ("start" "&optional" "justify")) nil [106505 108616]) ("py-fill-paragraph" function (:user-visible-flag t :arguments ("&optional" "justify")) nil [108618 109721]) ("py-insert-super" function (:user-visible-flag t) nil [109723 110851]) ("py-nesting-level" function (:user-visible-flag t :arguments ("&optional" "pps")) nil [110853 111228]) ("defalias" code nil nil [111230 111286]) ("py-compute-indentation" function (:user-visible-flag t :arguments ("&optional" "orig" "origline" "closing" "line" "inside" "repeat")) nil [111287 122174]) ("py-line-backward-maybe" function nil nil [122176 122340]) ("py-fetch-previous-indent" function (:arguments ("orig")) nil [122342 122559]) ("py-continuation-offset" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [122561 123046]) ("defalias" code nil nil [123048 123093]) ("defalias" code nil nil [123094 123138]) ("py-indentation-of-statement" function (:user-visible-flag t) nil [123139 123506]) ("defalias" code nil nil [123508 123560]) ("py-list-beginning-position" function (:user-visible-flag t :arguments ("&optional" "start")) nil [123561 123992]) ("py-end-of-list-position" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [123994 124542]) ("py-continuation-line-p" function nil nil [124544 124749]) ("py-preceding-line-backslashed-p" function (:user-visible-flag t) nil [124751 125105]) ("py-current-line-backslashed-p" function (:user-visible-flag t) nil [125107 125451]) ("py-escaped" function (:user-visible-flag t :arguments ("&optional" "iact")) nil [125453 125753]) ("py-in-comment-p" function nil nil [125755 126204]) ("py-in-triplequoted-string-p" function (:user-visible-flag t) nil [126206 127056]) ("py-in-string-p" function (:user-visible-flag t) nil [127058 127843]) ("py-in-statement-p" function (:user-visible-flag t) nil [127845 128317]) ("py-beginning-of-expression-p" function (:user-visible-flag t) nil [128319 128679]) ("py-beginning-of-partial-expression-p" function (:user-visible-flag t) nil [128681 129065]) ("py-beginning-of-statement-p" function (:user-visible-flag t) nil [129067 129423]) ("defalias" code nil nil [129425 129488]) ("py-statement-opens-block-p" function (:user-visible-flag t :arguments ("&optional" "regexp")) nil [129489 129828]) ("py-statement-opens-base" function (:arguments ("regexp")) nil [129830 130213]) ("defalias" code nil nil [130215 130280]) ("py-statement-opens-clause-p" function (:user-visible-flag t) nil [130281 130445]) ("defalias" code nil nil [130447 130530]) ("py-statement-opens-block-or-clause-p" function (:user-visible-flag t) nil [130531 130713]) ("defalias" code nil nil [130715 130778]) ("py-statement-opens-class-p" function (:user-visible-flag t) nil [130779 130959]) ("defalias" code nil nil [130961 131020]) ("py-statement-opens-def-p" function (:user-visible-flag t) nil [131021 131197]) ("defalias" code nil nil [131199 131276]) ("py-statement-opens-def-or-class-p" function (:user-visible-flag t) nil [131277 131471]) ("py-statement-closes-block-p" function nil nil [131473 131870]) ("py-end-base" function (:arguments ("regexp" "orig" "&optional" "iact")) nil [131872 132715]) ("py-look-downward-for-beginning" function (:arguments ("regexp")) nil [132717 133051]) ("py-current-defun" function (:user-visible-flag t :arguments ("&optional" "iact")) nil [133053 133975]) ("py-outdent-p" function nil nil [133977 134517]) ("py-sort-imports" function (:user-visible-flag t) nil [134519 135681]) ("py-in-literal" function (:arguments ("&optional" "lim")) nil [135683 136138]) ("empty-line-p" function (:user-visible-flag t :arguments ("&optional" "iact")) nil [136140 136466]) ("py-count-lines" function (:user-visible-flag t :arguments ("&optional" "start" "end")) nil [136468 137037]) ("py-which-function" function (:user-visible-flag t) nil [137039 137881]) ("py-help-address" variable (:constant-flag t :default-value "python-mode@python.org") nil [137883 138108]) ("defalias" code nil nil [138120 138172]) ("defalias" code nil nil [138173 138224]) ("defalias" code nil nil [138225 138277]) ("py-beginning-of-block" function (:user-visible-flag t :arguments ("&optional" "indent")) nil [138278 138696]) ("py-beginning-of-if-block" function (:user-visible-flag t) nil [138698 139096]) ("py-beginning-of-try-block" function (:user-visible-flag t) nil [139098 139506]) ("defalias" code nil nil [139508 139553]) ("defalias" code nil nil [139554 139603]) ("py-end-of-block" function (:user-visible-flag t) nil [139604 139922]) ("defalias" code nil nil [139944 140016]) ("defalias" code nil nil [140017 140088]) ("defalias" code nil nil [140089 140161]) ("py-beginning-of-block-or-clause" function (:user-visible-flag t :arguments ("&optional" "arg" "indent")) nil [140162 140760]) ("defalias" code nil nil [140762 140827]) ("defalias" code nil nil [140828 140897]) ("py-end-of-block-or-clause" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [140898 141398]) ("defalias" code nil nil [141410 141463]) ("defalias" code nil nil [141464 141516]) ("defalias" code nil nil [141517 141569]) ("py-beginning-of-class" function (:user-visible-flag t) nil [141570 141876]) ("defalias" code nil nil [141878 141923]) ("defalias" code nil nil [141924 141966]) ("py-end-of-class" function (:user-visible-flag t :arguments ("&optional" "iact")) nil [141967 142212]) ("defalias" code nil nil [142225 142279]) ("defalias" code nil nil [142280 142333]) ("defalias" code nil nil [142334 142388]) ("py-beginning-of-clause" function (:user-visible-flag t) nil [142389 142808]) ("defalias" code nil nil [142810 142857]) ("defalias" code nil nil [142858 142909]) ("py-end-of-clause" function (:user-visible-flag t) nil [142910 143326]) ("py-beginning-of-def" function (:user-visible-flag t) nil [143359 143613]) ("py-end-of-def" function (:user-visible-flag t :arguments ("&optional" "iact")) nil [143615 143858]) ("defalias" code nil nil [143860 143926]) ("defalias" code nil nil [143927 143993]) ("py-beginning-of-def-or-class" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [143994 144590]) ("defalias" code nil nil [144592 144647]) ("defalias" code nil nil [144648 144707]) ("defalias" code nil nil [144708 144764]) ("py-end-of-def-or-class" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [144765 145215]) ("defalias" code nil nil [145232 145294]) ("py-beginning-of-expression" function (:user-visible-flag t :arguments ("&optional" "orig" "origline" "done")) nil [145295 147927]) ("defalias" code nil nil [147929 147984]) ("py-end-of-expression" function (:user-visible-flag t :arguments ("&optional" "orig" "origline" "done")) nil [147985 151094]) ("defalias" code nil nil [151129 151207]) ("defalias" code nil nil [151208 151288]) ("py-beginning-of-partial-expression" function (:user-visible-flag t :arguments ("&optional" "orig" "origline" "done")) nil [151289 153655]) ("defalias" code nil nil [153657 153728]) ("defalias" code nil nil [153729 153797]) ("py-end-of-partial-expression" function (:user-visible-flag t :arguments ("&optional" "orig" "origline" "done")) nil [153798 157162]) ("defalias" code nil nil [157178 157238]) ("defalias" code nil nil [157239 157299]) ("defalias" code nil nil [157300 157360]) ("py-beginning-of-statement" function (:user-visible-flag t :arguments ("&optional" "orig" "origline" "done")) nil [157361 160082]) ("defalias" code nil nil [160084 160137]) ("defalias" code nil nil [160138 160188]) ("defalias" code nil nil [160189 160242]) ("py-end-of-statement" function (:user-visible-flag t :arguments ("&optional" "orig" "origline" "done")) nil [160243 165429]) ("py-goto-statement-below" function (:user-visible-flag t) nil [165431 165725]) ("py-mark-expression" function (:user-visible-flag t) nil [165736 165931]) ("py-mark-partial-expression" function (:user-visible-flag t) nil [165933 166270]) ("py-mark-statement" function (:user-visible-flag t) nil [166272 166464]) ("py-mark-block" function (:user-visible-flag t) nil [166466 166646]) ("py-mark-block-or-clause" function (:user-visible-flag t) nil [166648 166858]) ("py-mark-def-or-class" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [166860 167276]) ("py-mark-class" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [167278 167643]) ("py-mark-def" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [167645 168004]) ("py-mark-clause" function (:user-visible-flag t) nil [168006 168189]) ("py-beginning-of-decorator" function (:user-visible-flag t) nil [168191 168574]) ("py-end-of-decorator" function (:user-visible-flag t) nil [168576 169393]) ("py-mark-base" function (:arguments ("form" "&optional" "py-mark-decorators")) nil [169395 170166]) ("defalias" code nil nil [170181 170226]) ("py-copy-expression" function (:user-visible-flag t) nil [170227 170476]) ("defalias" code nil nil [170478 170539]) ("defalias" code nil nil [170540 170594]) ("py-copy-partial-expression" function (:user-visible-flag t) nil [170595 171707]) ("defalias" code nil nil [171709 171752]) ("py-copy-statement" function (:user-visible-flag t) nil [171753 171999]) ("defalias" code nil nil [172001 172036]) ("py-copy-block" function (:user-visible-flag t) nil [172037 172271]) ("defalias" code nil nil [172273 172328]) ("py-copy-block-or-clause" function (:user-visible-flag t) nil [172329 172593]) ("defalias" code nil nil [172595 172626]) ("py-copy-def" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [172627 173034]) ("py-copy-def-or-class" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [173036 173469]) ("defalias" code nil nil [173471 173506]) ("py-copy-class" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [173507 173920]) ("defalias" code nil nil [173922 173959]) ("py-copy-clause" function (:user-visible-flag t) nil [173960 174198]) ("py-kill-expression" function (:user-visible-flag t) nil [174213 174435]) ("defalias" code nil nil [174437 174501]) ("py-kill-partial-expression" function (:user-visible-flag t) nil [174502 174866]) ("py-kill-statement" function (:user-visible-flag t) nil [174868 175090]) ("py-kill-block" function (:user-visible-flag t) nil [175092 175302]) ("py-kill-block-or-clause" function (:user-visible-flag t) nil [175304 175556]) ("py-kill-def-or-class" function (:user-visible-flag t) nil [175558 175789]) ("py-kill-class" function (:user-visible-flag t) nil [175791 176001]) ("py-kill-def" function (:user-visible-flag t) nil [176003 176207]) ("py-kill-clause" function (:user-visible-flag t) nil [176209 176422]) ("py-forward-line" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [176446 176744]) ("py-beginning-of-comment" function (:user-visible-flag t) nil [176746 177105]) ("py-clause-lookup-keyword" function (:arguments ("regexp" "arg" "&optional" "indent")) nil [177107 180356]) ("py-go-to-keyword" function (:arguments ("regexp" "arg" "&optional" "maxindent")) nil [180358 181083]) ("py-leave-comment-or-string-backward" function (:user-visible-flag t :arguments ("&optional" "pos")) nil [181085 181401]) ("py-beginning-of-list-pps" function (:user-visible-flag t :arguments ("&optional" "iact" "last" "ppstart" "orig" "done")) nil [181403 182178]) ("when" code nil nil [182180 184293]) ("py-down-block-lc" function (:user-visible-flag t) nil [184304 184878]) ("py-down-clause-lc" function (:user-visible-flag t) nil [184880 185460]) ("py-down-def-lc" function (:user-visible-flag t) nil [185462 186024]) ("py-down-class-lc" function (:user-visible-flag t) nil [186026 186600]) ("py-down-statement-lc" function (:user-visible-flag t) nil [186602 187200]) ("py-down-statement" function (:user-visible-flag t) nil [187202 187825]) ("py-down-block" function (:user-visible-flag t) nil [187827 188337]) ("py-down-clause" function (:user-visible-flag t) nil [188339 188704]) ("py-down-block-or-clause" function (:user-visible-flag t) nil [188706 189107]) ("py-down-def" function (:user-visible-flag t) nil [189109 189462]) ("py-down-class" function (:user-visible-flag t) nil [189464 189825]) ("py-down-def-or-class" function (:user-visible-flag t) nil [189827 190216]) ("py-forward-into-nomenclature" function (:user-visible-flag t :arguments ("&optional" "arg" "iact")) nil [190265 192305]) ("py-backward-into-nomenclature" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [192307 192669]) ("defalias" code nil nil [192671 192710]) ("match-paren" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [192712 193745]) ("py-travel-current-indent" function (:arguments ("listing")) nil [193747 194410]) ("py-toggle-execute-keep-temporary-file-p" function (:user-visible-flag t) nil [194440 194747]) ("py-comint-output-filter-function" function (:arguments ("string")) nil [194749 195460]) ("py-guess-default-python" function (:user-visible-flag t) nil [195462 195804]) ("py-process-name" function (:arguments ("&optional" "name" "dedicated")) nil [195806 196414]) ("py-dirstack-hook" function nil nil [196435 196790]) ("py-set-shell-completion-environment" function (:user-visible-flag t) nil [196792 197513]) ("defalias" code nil nil [197515 197565]) ("py-shell-dedicated" function (:user-visible-flag t :arguments ("&optional" "argprompt")) nil [197566 197858]) ("py-shell" function (:user-visible-flag t :arguments ("&optional" "argprompt" "dedicated" "pyshellname")) nil [197860 200909]) ("python" function (:user-visible-flag t :arguments ("&optional" "argprompt")) nil [200935 201223]) ("python2" function (:user-visible-flag t :arguments ("&optional" "argprompt")) nil [201225 201517]) ("python2\\.7" function (:user-visible-flag t :arguments ("&optional" "argprompt")) nil [201519 201819]) ("python3" function (:user-visible-flag t :arguments ("&optional" "argprompt")) nil [201821 202113]) ("python3\\.2" function (:user-visible-flag t :arguments ("&optional" "argprompt")) nil [202115 202415]) ("defalias" code nil nil [202417 202441]) ("defalias" code nil nil [202442 202466]) ("ipython" function (:user-visible-flag t :arguments ("&optional" "argprompt")) nil [202467 202759]) ("jython" function (:user-visible-flag t :arguments ("&optional" "argprompt")) nil [202761 203049]) ("python-dedicated" function (:user-visible-flag t :arguments ("&optional" "argprompt")) nil [203051 203357]) ("python2-dedicated" function (:user-visible-flag t :arguments ("&optional" "argprompt")) nil [203359 203669]) ("python2\\.7-dedicated" function (:user-visible-flag t :arguments ("&optional" "argprompt")) nil [203671 203989]) ("python3-dedicated" function (:user-visible-flag t :arguments ("&optional" "argprompt")) nil [203991 204301]) ("python3\\.2-dedicated" function (:user-visible-flag t :arguments ("&optional" "argprompt")) nil [204303 204621]) ("ipython-dedicated" function (:user-visible-flag t :arguments ("&optional" "argprompt")) nil [204623 204933]) ("jython-dedicated" function (:user-visible-flag t :arguments ("&optional" "argprompt")) nil [204935 205241]) ("declare-function" code nil nil [205272 205345]) ("py-which-execute-file-command" function (:user-visible-flag t :arguments ("filename")) nil [205347 205878]) ("py-execute-region-no-switch" function (:user-visible-flag t :arguments ("start" "end" "&optional" "shell")) nil [205880 206149]) ("py-execute-region-switch" function (:user-visible-flag t :arguments ("start" "end" "&optional" "shell")) nil [206151 206426]) ("py-execute-region" function (:user-visible-flag t :arguments ("start" "end" "&optional" "shell" "dedicated")) nil [206428 207354]) ("py-execute-region-default" function (:user-visible-flag t :arguments ("start" "end" "&optional" "dedicated")) nil [207356 207609]) ("py-execute-region-dedicated" function (:user-visible-flag t :arguments ("start" "end" "&optional" "shell")) nil [207611 208546]) ("defalias" code nil nil [208548 208632]) ("py-execute-region-default-dedicated" function (:user-visible-flag t :arguments ("start" "end")) nil [208633 208838]) ("py-execute-base" function (:arguments ("start" "end" "&optional" "shell" "dedicated" "switch")) nil [208840 210256]) ("py-execute-intern" function (:arguments ("strg" "&optional" "procbuf" "proc" "temp" "file" "filebuf" "name" "py-execute-directory")) nil [210258 211429]) ("py-execute-string" function (:user-visible-flag t :arguments ("&optional" "string" "shell" "dedicated")) nil [211431 211827]) ("py-execute-string-dedicated" function (:user-visible-flag t :arguments ("&optional" "string" "shell")) nil [211829 212225]) ("py-shell-command-on-region" function (:user-visible-flag t :arguments ("start" "end")) nil [212227 213408]) ("py-ipython-shell-command-on-region" function (:user-visible-flag t :arguments ("start" "end")) nil [213410 214423]) ("py-send-region-ipython" function (:user-visible-flag t :arguments ("start" "end")) nil [214425 215686]) ("ipython-get-indenting-buffer" function nil nil [215688 215959]) ("ipython-autoindent" variable (:default-value t) nil [215961 216063]) ("ipython-send-and-indent" function (:user-visible-flag t) nil [216065 216929]) ("py-execute-region-in-shell" function (:user-visible-flag t :arguments ("start" "end" "&optional" "shell")) nil [216931 220110]) ("py-if-needed-insert-shell" function (:arguments ("&optional" "name")) nil [220112 220819]) ("py-insert-execute-directory" function nil nil [220821 221202]) ("py-insert-coding" function nil nil [221204 221576]) ("py-if-needed-insert-if" function nil nil [221578 221868]) ("py-fix-start" function (:arguments ("start" "end")) nil [221870 222325]) ("py-fetch-py-master-file" function (:user-visible-flag t) nil [222327 222864]) ("py-execute-import-or-reload" function (:user-visible-flag t :arguments ("&optional" "argprompt" "shell" "dedicated")) nil [222866 225242]) ("py-qualified-module-name" function (:arguments ("file")) nil [225244 225859]) ("py-execute-buffer-dedicated" function (:user-visible-flag t :arguments ("&optional" "shell")) nil [225861 226405]) ("py-execute-buffer-switch" function (:user-visible-flag t :arguments ("&optional" "shell")) nil [226407 227024]) ("defalias" code nil nil [227026 227108]) ("py-execute-buffer-dedicated-switch" function (:user-visible-flag t :arguments ("&optional" "shell")) nil [227109 227720]) ("py-execute-buffer" function (:user-visible-flag t :arguments ("&optional" "shell" "dedicated" "switch")) nil [227722 228356]) ("py-execute-buffer-base" function (:arguments ("&optional" "shell" "dedicated" "switch")) nil [228358 228895]) ("py-execute-buffer-no-switch" function (:user-visible-flag t :arguments ("&optional" "shell")) nil [228897 229536]) ("py-execute-region-python" function (:user-visible-flag t :arguments ("start" "end")) nil [229566 229740]) ("py-execute-region-python-switch" function (:user-visible-flag t :arguments ("start" "end")) nil [229742 230070]) ("py-execute-region-python-no-switch" function (:user-visible-flag t :arguments ("start" "end")) nil [230072 230404]) ("py-execute-region-python2" function (:user-visible-flag t :arguments ("start" "end")) nil [230406 230583]) ("py-execute-region-python2-switch" function (:user-visible-flag t :arguments ("start" "end")) nil [230585 230915]) ("py-execute-region-python2-no-switch" function (:user-visible-flag t :arguments ("start" "end")) nil [230917 231252]) ("py-execute-region-python2\\.7" function (:user-visible-flag t :arguments ("start" "end")) nil [231254 231437]) ("py-execute-region-python2\\.7-switch" function (:user-visible-flag t :arguments ("start" "end")) nil [231439 231776]) ("py-execute-region-python2\\.7-no-switch" function (:user-visible-flag t :arguments ("start" "end")) nil [231778 232119]) ("py-execute-region-python3" function (:user-visible-flag t :arguments ("start" "end")) nil [232121 232298]) ("py-execute-region-python3-switch" function (:user-visible-flag t :arguments ("start" "end")) nil [232300 232631]) ("py-execute-region-python3-no-switch" function (:user-visible-flag t :arguments ("start" "end")) nil [232633 232968]) ("py-execute-region-python3\\.2" function (:user-visible-flag t :arguments ("start" "end")) nil [232970 233153]) ("py-execute-region-python3\\.2-switch" function (:user-visible-flag t :arguments ("start" "end")) nil [233155 233492]) ("py-execute-region-python3\\.2-no-switch" function (:user-visible-flag t :arguments ("start" "end")) nil [233494 233835]) ("py-execute-region-ipython" function (:user-visible-flag t :arguments ("start" "end")) nil [233837 234014]) ("py-execute-region-ipython-switch" function (:user-visible-flag t :arguments ("start" "end")) nil [234016 234347]) ("py-execute-region-ipython-no-switch" function (:user-visible-flag t :arguments ("start" "end")) nil [234349 234684]) ("py-execute-region-jython" function (:user-visible-flag t :arguments ("start" "end")) nil [234686 234860]) ("py-execute-region-jython-switch" function (:user-visible-flag t :arguments ("start" "end")) nil [234862 235190]) ("py-execute-region-jython-no-switch" function (:user-visible-flag t :arguments ("start" "end")) nil [235192 235524]) ("py-execute-defun" function (:user-visible-flag t) nil [235626 235890]) ("py-process-file" function (:user-visible-flag t :arguments ("filename" "&optional" "output-buffer" "error-buffer")) nil [235892 236479]) ("py-execute-defun" function (:user-visible-flag t) nil [236585 236849]) ("py-process-file" function (:user-visible-flag t :arguments ("filename" "&optional" "output-buffer" "error-buffer")) nil [236851 237438]) ("py-exec-execfile-region" function (:user-visible-flag t :arguments ("start" "end" "&optional" "shell")) nil [237440 237861]) ("py-exec-execfile-base" function (:arguments ("strg" "shell" "iact")) nil [237863 238838]) ("py-exec-execfile" function (:user-visible-flag t :arguments ("filename" "cmd" "header" "&optional" "output-buffer" "error-buffer")) nil [238840 239696]) ("py-execute-block" function (:user-visible-flag t) nil [239724 240066]) ("py-execute-block-or-clause" function (:user-visible-flag t) nil [240068 240450]) ("py-execute-class" function (:user-visible-flag t) nil [240452 240794]) ("py-execute-clause" function (:user-visible-flag t) nil [240796 241142]) ("py-execute-def" function (:user-visible-flag t) nil [241144 241478]) ("py-execute-def-or-class" function (:user-visible-flag t) nil [241480 241850]) ("py-execute-expression" function (:user-visible-flag t) nil [241852 242214]) ("py-execute-partial-expression" function (:user-visible-flag t) nil [242216 242610]) ("py-execute-statement" function (:user-visible-flag t) nil [242612 242970]) ("py-execute-file" function (:arguments ("proc" "filename" "&optional" "cmd")) nil [242972 243973]) ("py-last-exeption-buffer" variable nil nil [244012 244170]) ("py-postprocess-output-buffer" function (:arguments ("buf")) nil [244172 244875]) ("py-jump-to-exception" function (:arguments ("file" "line" "py-line-number-offset")) nil [244877 246084]) ("py-down-exception" function (:user-visible-flag t :arguments ("&optional" "bottom")) nil [246086 246430]) ("py-up-exception" function (:user-visible-flag t :arguments ("&optional" "top")) nil [246432 246842]) ("py-find-next-exception-prepare" function (:arguments ("direction" "start")) nil [246844 247857]) ("py-find-next-exception" function (:arguments ("start" "buffer" "searchdir" "errwhere")) nil [247859 250444]) ("py-output-buffer-filter" function (:user-visible-flag t :arguments ("&optional" "beg" "end")) nil [250471 251154]) ("py-send-string" function (:user-visible-flag t :arguments ("string")) nil [251156 251686]) ("py-pdbtrack-overlay-arrow" function (:arguments ("activation")) nil [251732 252282]) ("py-pdbtrack-track-stack-file" function (:arguments ("text")) nil [252284 254848]) ("py-pdbtrack-get-source-buffer" function (:arguments ("block")) nil [254850 256902]) ("py-pdbtrack-grub-for-buffer" function (:arguments ("funcname" "lineno")) nil [256904 257880]) ("py-pdbtrack-toggle-stack-tracking" function (:user-visible-flag t :arguments ("arg")) nil [257906 258485]) ("turn-on-pdbtrack" function nil nil [258487 258570]) ("turn-off-pdbtrack" function nil nil [258572 258656]) ("py-fetch-docu" function (:user-visible-flag t) nil [258689 259583]) ("py-find-imports" function nil nil [259585 260086]) ("python-imports" variable nil nil [260088 260145]) ("make-variable-buffer-local" code nil nil [260146 260190]) ("python-find-imports" function (:user-visible-flag t) nil [260192 261410]) ("defalias" code nil nil [261412 261460]) ("py-describe-symbol" function (:user-visible-flag t) nil [261461 262601]) ("py-dump-help-string" function (:arguments ("str")) nil [262623 264595]) ("py-describe-mode" function (:user-visible-flag t) nil [264597 274902]) ("when" code nil nil [275041 275383]) ("python-preoutput-result" variable nil nil [275385 275488]) ("py-send-receive" function (:arguments ("string")) nil [275490 276204]) ("py-find-function" function (:user-visible-flag t :arguments ("name")) nil [276206 277093]) ("py-update-imports" function (:user-visible-flag t) nil [277095 277626]) ("py-indent-forward-line" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [277665 278667]) ("py-dedent-forward-line" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [278669 278869]) ("py-dedent" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [278871 279817]) ("py-close-intern" function (:arguments ("regexp")) nil [279819 280168]) ("py-close-def" function (:user-visible-flag t) nil [280170 280470]) ("py-close-class" function (:user-visible-flag t) nil [280472 280773]) ("py-close-clause" function (:user-visible-flag t) nil [280775 281079]) ("py-close-block" function (:user-visible-flag t) nil [281081 281382]) ("py-class-at-point" function (:user-visible-flag t) nil [281384 281777]) ("py-function-at-point" function (:user-visible-flag t) nil [281779 282185]) ("py-beginning-of-function" function (:user-visible-flag t :arguments ("&optional" "class")) nil [282187 282419]) ("py-end-of-function" function (:user-visible-flag t :arguments ("&optional" "class")) nil [282421 282620]) ("py-line-at-point" function (:user-visible-flag t) nil [282656 283012]) ("py-looking-at-keywords-p" function (:user-visible-flag t) nil [283014 283429]) ("py-match-paren-mode" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [283431 283671]) ("py-match-paren" function (:user-visible-flag t) nil [283673 284099]) ("py-documentation" function (:user-visible-flag t :arguments ("w")) nil [284158 284788]) ("eva" function (:user-visible-flag t) nil [284790 285092]) ("pst-here" function (:user-visible-flag t) nil [285094 285444]) ("defalias" code nil nil [285446 285484]) ("py-printform-insert" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [285485 285877]) ("py-line-to-printform-python2" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [285879 286320]) ("py-imenu-class-regexp" variable (:default-value (concat "\\(" "^[ 	]*" "\\(class[ 	]+[a-zA-Z0-9_]+\\)" "\\([ 	]*\\((\\([a-zA-Z0-9_,. 	
]\\)*)\\)?\\)" "[ 	]*:" "\\)")) nil [286375 286933]) ("py-imenu-method-regexp" variable (:default-value (concat "\\(" "^[ 	]*" "\\(def[ 	]+" "\\([a-zA-Z0-9_]+\\)" "[ 	]*(\\([^:#]*\\))" "\\)" "[ 	]*:" "\\)")) nil [286935 287690]) ("py-imenu-method-no-arg-parens" variable (:default-value (quote (2 8))) nil [287692 287970]) ("py-imenu-method-arg-parens" variable (:default-value (quote (2 7))) nil [287972 288240]) ("py-imenu-generic-expression" variable (:default-value (cons (concat py-imenu-class-regexp "\\|" py-imenu-method-regexp) py-imenu-method-no-arg-parens)) nil [288390 288823]) ("py-imenu-generic-regexp" variable nil nil [288991 289027]) ("py-imenu-generic-parens" variable nil nil [289028 289064]) ("py-switch-imenu-index-function" function (:user-visible-flag t) nil [289066 289964]) ("py-imenu-create-index-function" function nil nil [289966 290727]) ("py-imenu-create-index-engine" function (:arguments ("&optional" "start-indent")) nil [290729 295055]) ("imenu-max-items" variable nil nil [295057 295081]) ("py-imenu-create-index-new-intern" function (:arguments ("&optional" "thisend")) nil [295082 296178]) ("py-imenu-create-index-new" function (:arguments ("&optional" "beg" "end")) nil [296180 297444]) ("python-symbol-completions" function (:arguments ("symbol")) nil [297482 298076]) ("py-completion-at-point" function nil nil [298078 298528]) ("py-mode-output-map" variable nil nil [298530 298605]) ("if" code nil nil [298606 299136]) ("setq" code nil nil [299138 299551]) ("py-choose-shell-by-shebang" function (:user-visible-flag t) nil [299553 300199]) ("py-choose-shell-by-import" function nil nil [300201 300825]) ("defalias" code nil nil [300827 300866]) ("py-which-python" function (:user-visible-flag t) nil [300867 301366]) ("py-python-current-environment" function (:user-visible-flag t) nil [301368 301771]) ("defalias" code nil nil [301773 301823]) ("defalias" code nil nil [301824 301870]) ("py-switch-shells" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [301871 304635]) ("defalias" code nil nil [304637 304680]) ("py-choose-shell" function (:user-visible-flag t :arguments ("&optional" "arg" "pyshell" "dedicated")) nil [304681 305866]) ("inferior-python-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "" (quote py-load-file)) (define-key map "" (quote python-check)) map)) nil [305868 306350]) ("py-load-pymacs" function (:user-visible-flag t) nil [306352 307741]) ("py-guess-py-install-directory" function nil nil [307743 308134]) ("py-set-load-path" function (:user-visible-flag t) nil [308136 308910]) ("skeleton-further-elements" variable nil nil [308912 308946]) ("define-derived-mode" code nil nil [308947 315608]) ("pdb" function (:arguments ("before" "gud-query-cmdline" "activate")) nil [315610 315855]) ("defalias" code nil nil [315857 315918]) ("defalias" code nil nil [315919 315984]) ("define-derived-mode" code nil nil [315986 316361]) ("define-derived-mode" code nil nil [316363 316772]) ("py-def-or-class-beginning-position" function (:user-visible-flag t) nil [316788 317106]) ("py-def-or-class-end-position" function (:user-visible-flag t) nil [317108 317409]) ("py-statement-beginning-position" function (:user-visible-flag t) nil [317411 317696]) ("py-statement-end-position" function (:user-visible-flag t) nil [317698 317918]) ("py-current-indentation" function (:user-visible-flag t) nil [317920 318193]) ("make-obsolete" code nil nil [318195 318241]) ("define-derived-mode" code nil nil [318242 318503]) ("let" code nil nil [318786 319079]) ("when" code nil nil [319081 319238]) ("py-kill-emacs-hook" function nil nil [319240 319463]) ("add-hook" code nil nil [319513 319560]) ("add-hook" code nil nil [319561 319633]) ("add-hook" code nil nil [319635 319916]) ("or" code nil nil [319964 320116]) ("py-version" function (:user-visible-flag t) nil [320118 320302]) ("py-python-command" variable (:default-value py-shell-name) nil [320304 320344]) ("py-jpython-command" variable (:default-value py-shell-name) nil [320345 320386]) ("py-jython-command" variable (:default-value py-shell-name) nil [320387 320427]) ("py-default-interpreter" variable (:default-value py-shell-name) nil [320428 320473]) ("python-command" variable (:default-value py-shell-name) nil [320474 320511]) ("py-toggle-local-default-use" function nil nil [320529 320972]) ("py-shell-template" variable (:default-value "
(defun NAME (&optional argprompt)
  \"Start an DOCNAME interpreter in another window.

With optional \\\\[universal-argument] user is prompted
for options to pass to the DOCNAME interpreter. \"
  (interactive \"P\")
  (let* ((py-shell-name \"FULLNAME\"))
    (py-set-shell-completion-environment)
    (py-shell argprompt)
    (when (interactive-p) (switch-to-buffer (current-buffer))
          (goto-char (point-max)))))
") nil [320974 321427]) ("setq" code nil nil [321429 321880]) ("py-install-search-local" function nil nil [321882 322065]) ("py-install-local-shells" function (:user-visible-flag t :arguments ("&optional" "local" "path-prefix")) nil [322175 324198]) ("python-which-shell" variable nil nil [324263 324294]) ("python-which-args" variable (:default-value python-python-command-args) nil [324295 324349]) ("python-which-bufname" variable (:default-value "Python") nil [324350 324388]) ("make-variable-buffer-local" code nil nil [324389 324437]) ("make-variable-buffer-local" code nil nil [324438 324485]) ("make-variable-buffer-local" code nil nil [324486 324536]) ("or" code nil nil [324584 324741]) ("python-file-queue" variable nil nil [324808 324939]) ("python-pdbtrack-is-tracking-p" variable nil nil [324941 324983]) ("python-pdbtrack-stack-entry-regexp" variable (:constant-flag t :default-value "^> \\(.*\\)(\\([0-9]+\\))\\([?a-zA-Z0-9_<>]+\\)()") nil [324985 325150]) ("python-pdbtrack-input-prompt" variable (:constant-flag t :default-value "
[(<]*[Ii]?[Pp]db[>)]+ ") nil [325152 325282]) ("python-pdbtrack-track-range" variable (:constant-flag t :default-value 10000) nil [325284 325403]) ("python-command" variable (:default-value python-python-command) nil [325455 325709]) ("python-buffer" variable (:user-visible-flag t) nil [325711 326497]) ("make-variable-buffer-local" code nil nil [326498 326541]) ("python-compilation-regexp-alist" variable (:constant-flag t :default-value (\` (((\, (rx line-start (1+ (any " 	")) "File \"" (group (1+ (not (any "\"<")))) "\", line " (group (1+ digit)))) 1 2) ((\, (rx " in file " (group (1+ not-newline)) " on line " (group (1+ digit)))) 1 2) ((\, (rx line-start "> " (group (1+ (not (any "(\"<")))) "(" (group (1+ digit)) ")" (1+ (not (any "("))) "()")) 1 2)))) nil [326543 327237]) ("inferior-python-mode-syntax-table" variable (:default-value (let ((st (make-syntax-table py-mode-syntax-table))) (modify-syntax-entry 39 "." st) st)) nil [327239 327581]) ("declare-function" code nil nil [327598 327671]) ("python--prompt-regexp" variable nil nil [327673 327707]) ("python--set-prompt-regexp" function nil nil [327709 328289]) ("define-derived-mode" code nil nil [328481 329634]) ("python-input-filter" function (:arguments ("str")) nil [329636 329852]) ("python-args-to-list" function (:arguments ("string")) nil [329894 330249]) ("python-preoutput-continuation" variable nil nil [330251 330371]) ("python-preoutput-leftover" variable nil nil [330373 330411]) ("python-preoutput-skip-next-prompt" variable nil nil [330412 330458]) ("python-preoutput-filter" function (:arguments ("s")) nil [330645 333026]) ("python-version-checked" variable nil nil [333028 333063]) ("python-check-version" function (:arguments ("cmd")) nil [333064 333732]) ("run-python" function (:user-visible-flag t :arguments ("&optional" "cmd" "noshow" "new")) nil [333801 337231]) ("python-send-command" function (:arguments ("command")) nil [337233 337583]) ("py-send-region" function (:user-visible-flag t :arguments ("start" "end")) nil [337585 339470]) ("py-send-buffer" function (:user-visible-flag t) nil [339472 339616]) ("py-switch-to-python" function (:user-visible-flag t :arguments ("eob-p")) nil [339618 339928]) ("py-send-region-and-go" function (:user-visible-flag t :arguments ("start" "end")) nil [339930 340134]) ("python-prev-dir/file" variable nil nil [340136 340295]) ("py-load-file" function (:user-visible-flag t :arguments ("file-name")) nil [340297 341415]) ("python-proc" function nil nil [341417 341821]) ("py-set-proc" function (:user-visible-flag t) nil [341823 342337]) ("view-return-to-alist" variable nil nil [342375 342404]) ("python-imports" variable nil nil [342405 342428]) ("python-send-string" function (:user-visible-flag t :arguments ("string")) nil [342454 342988]) ("python-send-receive" function (:arguments ("string")) nil [342990 343588]) ("python-check-comint-prompt" function (:arguments ("&optional" "proc")) nil [343590 344057]) ("python-eldoc-function" function nil nil [344172 345157]) ("declare-function" code nil nil [345190 345259]) ("python-after-info-look" function nil nil [345261 347280]) ("eval-after-load" code nil nil [347281 347336]) ("python-maybe-jython" function nil nil [347479 348427]) ("add-hook" code nil nil [348558 348634]) ("outline-heading-end-regexp" variable nil nil [348636 348671]) ("eldoc-documentation-function" variable nil nil [348672 348709]) ("python-mode-running" variable nil nil [348710 348738]) ("python-comint-output-filter-function" function (:arguments ("string")) nil [348779 349383]) ("python-pdbtrack-overlay-arrow" function (:arguments ("activation")) nil [349385 349906]) ("python-pdbtrack-track-stack-file" function (:arguments ("text")) nil [349908 352682]) ("python-pdbtrack-get-source-buffer" function (:arguments ("block")) nil [352684 354497]) ("python-pdbtrack-grub-for-buffer" function (:arguments ("funcname" "lineno")) nil [354499 355305]) ("python-execute-file" function (:arguments ("proc" "filename")) nil [355350 356195]) ("py-find-global-imports" function nil nil [356219 356708]) ("python-imports" variable (:default-value "None") nil [356805 356907]) ("make-variable-buffer-local" code nil nil [356908 356952]) ("py-shell-input-lines" variable nil nil [357010 357251]) ("py-shell-simple-send" function (:arguments ("proc" "string")) nil [358050 358192]) ("if" code nil nil [358194 360490]) ("py-shell-execute-string-now" function (:arguments ("string")) nil [360492 362251]) ("py-dot-word-before-point" function nil nil [362253 362384]) ("py-shell-complete" function (:user-visible-flag t) nil [362386 363857]) ("ipython-completion-command-string" variable nil nil [364315 364516]) ("ipython0\\.10-completion-command-string" variable (:default-value "print(';'.join(__IP.Completer.all_completions('%s'))) #PYTHON-MODE SILENT
") nil [364585 364780]) ("ipython0\\.11-completion-command-string" variable (:default-value "print(';'.join(get_ipython().Completer.all_completions('%s'))) #PYTHON-MODE SILENT
") nil [364909 365113]) ("ipython-complete" function (:user-visible-flag t) nil [365115 367430]) ("py-pychecker-run" function (:user-visible-flag t :arguments ("command")) nil [367446 368910]) ("if" code nil nil [369603 369736]) ("setq" code nil nil [369738 369764]) ("virtualenv-filter" function (:arguments ("predicate" "sequence")) nil [369816 370166]) ("virtualenv-append-path" function (:arguments ("dir" "var")) nil [370168 370425]) ("virtualenv-add-to-path" function (:arguments ("dir")) nil [370427 370616]) ("virtualenv-current" function (:user-visible-flag t) nil [370618 370734]) ("virtualenv-activate" function (:user-visible-flag t :arguments ("dir")) nil [370736 371319]) ("virtualenv-deactivate" function (:user-visible-flag t) nil [371321 371627]) ("virtualenvp" function (:arguments ("dir")) nil [371629 371742]) ("virtualenv-workon-complete" function nil nil [371744 372238]) ("virtualenv-workon" function (:user-visible-flag t :arguments ("name")) nil [372240 372483]) ("python-mode" package nil nil [372485 372507]))
    :file "python-mode.el"
    :pointmax 372537
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0beta3"
  :semanticdb-version "2.0beta3"
  )
